---

### redis  cluster resources

- name: Deploy Redis Queue configuration file (use template)
  template: src=redis.conf
        dest=/etc/{{ item.key }}.conf
        owner=root
        group=root
        mode="u=rw,g=r,o=r"
  with_dict: "{{redis}}"
  tags: [install, redis, config]

- name: Create Redis resources
  shell: pcs resource create {{ item.key }} ocf:heartbeat:redis
                bin={{ item.value.bin }}
                client_bin={{ item.value.client_bin }}
                config=/etc/{{ item.key }}.conf
                user={{ item.value.user }}
                rundir={{ item.value.rundir }}
                pidfile_name={{ item.value.pidfile_name }}
                socket_name={{ item.value.socket_name }}
                port={{ item.value.port }}
                wait_last_known_master={{ item.value.wait_last_known_master }}
                --master
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Tunne meta values
  shell: pcs resource meta {{ item.key }}-master
                master-max={{ item.value.master_max }}
                master-node-max={{ item.value.master_node_max }}
                clone-max={{ item.value.clone_max }}
                clone-node-max={{ item.value.clone_node_max }}
                notify={{ item.value.notify }}
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Create VIP
  shell: pcs resource create {{ item.key }}-vip IPaddr2 \
                ip="{{ item.value.vip_ip }}"
                nic="{{ item.value.vip_nic }}"
                cidr_netmask="{{ item.value.vip_cidr_netmask }}"
                op start   timeout="60s" interval="0s"  on-fail="restart"
                op monitor timeout="60s" interval="10s" on-fail="restart"
                op stop    timeout="60s" interval="0s"  on-fail="block"
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Create Resource group
  shell: pcs resource group add {{ item.key }}-master-group {{ item.key }}-vip
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Create colocation constraint
  shell: pcs constraint colocation add {{ item.key }}-master-group with Master {{ item.key }}-master INFINITY
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Create promote order constraint
  shell: pcs constraint order promote {{ item.key }}-master then start {{ item.key }}-master-group symmetrical=false score=INFINITY
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]

- name: Create demote order constraint
  shell: pcs constraint order demote  {{ item.key }}-master then stop {{ item.key }}-master-group symmetrical=false score=0
  with_dict: "{{redis}}"
  run_once: true
  tags: [config_cluster, redis]
